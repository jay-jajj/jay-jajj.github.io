{"pages":[{"title":"index.md","text":"","link":"/about/index.html"}],"posts":[{"title":"안녕하세요 여러분! (Hello guys!)","text":"첫글입니다. 👏👏👏👏먼저 만나뵈서 반갑습니다.저는 재쯔(jay-jajj)라고 합니다. 기록할 사이트를 찾다가 티스토리, velog 여기저기 고민하다가hexo 가 눈에띄어서 (여기서부터 잘못되었지) 테마도 괜찮길레 ‘가자!’ 했습니다. 도움을 받은 사이트kinetic님 블로그 사이트들에 포스팅 된글은 오류없이 척척 해결해 나가고 내가 겪은 에러는 찾아볼수없고 어찌 그리 다들 잘 풀리시는지…눈물로 검색하며 보낸 시간들 😢😢 어찌 어찌 해결했다만 왜 되는지도 모르겠고 hexo로 블로그를 만든다고 엄청나게 고생하고 고생하다가 어느정도 포기(?)음…. 아냐타협하고 글을 쓰면서 최적화를 해나가야 겠다는 생각이 들어 글을쓰게 되었네요.자주 들러주세요.🤗🤗🤗(애드고시 통과해보게)","link":"/2021/02/09/hello-world/"},{"title":"변수, 호이스팅, TDZ(Temporal Dead Zone)","text":"변태수 (죄송합니다.)변수는 다들 알겠지만 변하는 수를 말하죠.뭔소리야싶으시겠지만… 수학에서의 x y 와 거의 같습니다.프로그래밍에서의 변수는 값을 저장할수있습니다.자바스크립트에서는 변수의 종류가 3가지가 존재합니다.let, const, var입니다.이 중 var는 오래된 문법으로 현재는 쓰기를 지향하지 않습니다.let 과 const는 es6에서 추가된 개념으로 쫌 더 쌔거란 거죠.var와 최근 추가된 let, const의 차이점을 설명 드리겠습니다.var는 중복해서 선언이 가능합니다. 1234var talk = &quot;철수야&quot;;console.log(talk);var talk = &quot;왜불러&quot;;// 에러없음 하지만 let은 불가능 해요. 래퍼런스 에러가 딱 뜹니다. 1234let talk = &quot;철수야&quot;console.log(talk);let talk = &quot;시끄러&quot;;// Error 또 var는 선언전에 사용이 가능합니다. 변수가 최상위에 선언된것 처럼 됩니다. 이런걸 호이스팅이라고 하죠. 하지만 변수명은 호이스팅 되지만 값 즉 할당은 호이스팅 되지않기 때문에 값이 undefined가 됩니다. 123456console.log(name) //undefinedvar name = '앨런 튜닝';/*-----------밑에 처럼 됩니다.-------------*/var name;console.log(name) //undefinedname = '앨런 튜닝'; 갑자기 호이스팅이라는 전문용어 딱 올라오니까 벌써 머리 아프죠.호이스팅의 설명을 들고 오자면. 호이스팅(hoisting) : 스코프 내부 어디서든 변수가 최상위에 선언된것 처럼 행동 하는것 을 말합니다.let과 const는 선언전에 사용하려면 하면 래퍼런스 에러가 반겨줍니다. 12console.log(name); // 콘솔 : Reference Error야 헤헷let name = &quot;폰 노이천&quot;; 그럼 let과 const는 호이스팅이 안되냐? 그건 아닙니다.let과 const 또한 호이스팅 잘 됩니다. 에러가 나는 이유는 TDZ(tempral dead zone) 때문이죠.let과 const는 tdz영향을 받습니다. tdz 영역에 있는 변수는 사용을 못해요.이 영역에서 열심히 써봤자 에러가 난다는 거죠.쉽게 예시를 보면 /* ---tempral dead zone-- */ console.log(name); //error /* ---tempral dead zone-- */ let name = &quot;앨런 튜닝&quot; //이 밑으론 써도 된다는 거죠 console.log(name); // console : '앨런튜닝' 요렇게 됩니다.할당을 하기전에는 사용을 할수가 없습니다. 그렇기 때문에 잠재적인 버그를 줄여주고 예측가능하게 해준다 그말입니다. 변수는 3단계 생성과정을 거칩니다. 선언 단계 할당 단계 초기화 단계 var는 선언과 할당이 동시에 일어납니다. 선언 및 초기화 단계 할당 단계 여기 서 초기화란 초기화 : undefined를 할당해주는 단계 를 말합니다. let은 선언단계와 초기화 단계가 분리되서 진행이 됩니다. 난 저 고리타분한 var와는 다르다 그말이죠. 선언 단계 초기화 단계 할당 단계선언은 호이스팅 되지만 초기화 단계가 실제 코드에 도달","link":"/2021/01/26/js/%EB%B3%80%EC%88%98,%20%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85,%20TDZ/"}],"tags":[{"name":"첫글","slug":"첫글","link":"/tags/%EC%B2%AB%EA%B8%80/"},{"name":"변수","slug":"변수","link":"/tags/%EB%B3%80%EC%88%98/"},{"name":"hoisting","slug":"hoisting","link":"/tags/hoisting/"},{"name":"tdz","slug":"tdz","link":"/tags/tdz/"},{"name":"es6","slug":"es6","link":"/tags/es6/"}],"categories":[{"name":"other","slug":"other","link":"/categories/other/"},{"name":"programming","slug":"programming","link":"/categories/programming/"},{"name":"JS","slug":"programming/JS","link":"/categories/programming/JS/"}]}